'use client';

/**
 * @file Create {{featureName}&#125; page
 * @module app/dashboard/{{featureNamePlural}&#125;/create/page
 */

import React, { useState } from 'react';
import { 
  Box, 
  Typography, 
  Container, 
  Breadcrumbs,
  Link as MuiLink,
  Alert,
} from '@mui/material';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import {{PascalFeatureName}&#125;Form from '@/components/dashboard/{{featureNamePlural}&#125;/{{PascalFeatureName}&#125;Form';

/**
 * Create {{featureName}&#125; page
 * Page for creating a new {{featureName}&#125;
 * 
 * @component
 * @returns {React.ReactElement} Create {{featureName}&#125; page
 */
{{{{raw}&#125;}&#125;
export default function Create{{PascalFeatureName}&#125;Page() {
  const router = useRouter();
  const [error, setError] = useState('');

  const handleSubmit = async (data) => {
    try {
      setError('');

      const response = await fetch(`/api/{{featureNamePlural}&#125;`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (!result.success) {
        throw new Error(result.error || 'Failed to create {{featureName}&#125;');
      }

      router.push('/dashboard/{{featureNamePlural}&#125;');
      router.refresh();
    } catch (err) {
      console.error('Error creating {{featureName}&#125;:', err);
      setError(err.message || 'An error occurred while creating the {{featureName}&#125;');
    }
  };

  return (
    <Container maxWidth="lg">
      <Box sx=&#123;{ py: 4 }&#125;>
        <Breadcrumbs sx=&#123;{ mb: 2 }&#125;>
          <MuiLink 
            component={Link} 
            href="/dashboard"
            underline="hover"
            color="inherit"
          >
            Dashboard
          </MuiLink>
          <MuiLink 
            component={Link} 
            href="/dashboard/{{featureNamePlural}&#125;"
            underline="hover"
            color="inherit"
          >
            {{proper featureNamePlural}&#125;
          </MuiLink>
          <Typography color="text.primary">Create</Typography>
        </Breadcrumbs>

        <Typography variant="h4" component="h1" gutterBottom>
          Create {{proper featureName}&#125;
        </Typography>

        {error && (
          <Alert severity="error" sx=&#123;{ mb: 3 }&#125;>
            {error}
          </Alert>
        )}

        <{{PascalFeatureName}&#125;Form onSubmit={handleSubmit} />
      </Box>
    </Container>
  );
}
{{{{/raw}&#125;}&#125;
