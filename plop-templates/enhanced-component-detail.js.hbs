'use client';

/**
 * @file {{PascalFeatureName}} detail component
 * @module components/dashboard/{{featureNamePlural}}/{{PascalFeatureName}}Detail
 */

import React from 'react';
import {
  Box,
  Paper,
  Typography,
  Divider,
  Button,
  Grid,
  Chip,
} from '@mui/material';
import { Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';

/**
 * {{PascalFeatureName}} detail component
 * Displays detailed information about a {{featureName}}
 * 
 * @component
 * @param {Object} props - Component props
 * @param {Object} props.{{featureName}} - The {{featureName}} to display
 * @param {Function} props.onEdit - Function to call when edit button is clicked
 * @param {Function} props.onDelete - Function to call when delete button is clicked
 * @returns {React.ReactElement} {{PascalFeatureName}}Detail component
 */
export default function {{PascalFeatureName}}Detail({
  {{featureName}},
  onEdit,
  onDelete
}) {
  if (!{{featureName}}) {
    return (
      <Paper sx={{ p: 3, textAlign: 'center' }}>
        <Typography>
          No {{featureName}} data available.
        </Typography>
      </Paper>
    );
  }
  
  // Format date
  const formatDate = (dateString) => {
    if (!dateString) return 'N/A';
    const date = new Date(dateString);
    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
  };
  
  return (
    <Paper sx={{ p: 3 }}>
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>
        <Typography variant="h5" component="h2">
          { {{featureName}}.name }
        </Typography>
        
        <Box sx={{ display: 'flex', gap: 1 }}>
          <Button
            startIcon={<EditIcon />}
            onClick={onEdit}
            variant="outlined"
            size="small"
          >
            Edit
          </Button>
          
          {onDelete && (
            <Button
              startIcon={<DeleteIcon />}
              onClick={onDelete}
              variant="outlined"
              color="error"
              size="small"
            >
              Delete
            </Button>
          )}
        </Box>
      </Box>
      
      <Divider sx={{ mb: 3 }} />
      
      <Grid container spacing={3}>
        <Grid item xs={12} md={6}>
          <Typography variant="body2" color="text.secondary">
            ID
          </Typography>
          <Typography variant="body1" gutterBottom>
            { {{featureName}}._id}
          </Typography>
        </Grid>
        
        <Grid item xs={12} md={6}>
          <Typography variant="body2" color="text.secondary">
            Created At
          </Typography>
          <Typography variant="body1" gutterBottom>
            {formatDate({{featureName}}.createdAt)}
          </Typography>
        </Grid>
        
        { {{featureName}}.description && (
          <Grid item xs={12}>
            <Typography variant="body2" color="text.secondary">
              Description
            </Typography>
            <Typography variant="body1" paragraph>
              { {{featureName}}.description}
            </Typography>
          </Grid>
        )}
        
        {/* Add more fields based on your model */}
      </Grid>
    </Paper>
  );
}