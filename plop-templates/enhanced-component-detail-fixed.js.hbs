'use client';

/**
 * @file {{PascalFeatureName}&#125; detail component
 * @module components/dashboard/{{featureNamePlural}&#125;/{{PascalFeatureName}&#125;Detail
 */

import React from 'react';
import {
  Box,
  Paper,
  Typography,
  Divider,
  Button,
  Grid,
  Chip,
} from '@mui/material';
import { Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';

/**
 * {{PascalFeatureName}&#125; detail component
 * Displays detailed information about a {{featureName}&#125;
 * 
 * @component
 * @param {Object} props - Component props
 * @param {Object} props.{{featureName}&#125; - The {{featureName}&#125; to display
 * @param {Function} props.onEdit - Function to call when edit button is clicked
 * @param {Function} props.onDelete - Function to call when delete button is clicked
 * @returns {React.ReactElement} {{PascalFeatureName}&#125;Detail component
 */
{{{{raw}&#125;}&#125;
export default function {{PascalFeatureName}&#125;Detail({
  {{featureName}&#125;,
  onEdit,
  onDelete
}) {
  if (!{{featureName}&#125;) {
    return (
      <Paper sx=&#123;{ p: 3, textAlign: 'center' }&#125;>
        <Typography>
          No {{featureName}&#125; data available.
        </Typography>
      </Paper>
    );
  }

  const formatDate = (dateString) => {
    if (!dateString) return 'N/A';
    const date = new Date(dateString);
    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
  };

  return (
    <Paper sx=&#123;{ p: 3 }&#125;>
      <Box sx=&#123;{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }&#125;>
        <Typography variant="h5" component="h2">
          { {{featureName}&#125;.name }
        </Typography>

        <Box sx=&#123;{ display: 'flex', gap: 1 }&#125;>
          <Button
            startIcon={<EditIcon />}
            onClick={onEdit}
            variant="outlined"
            size="small"
          >
            Edit
          </Button>

          {onDelete && (
            <Button
              startIcon={<DeleteIcon />}
              onClick={onDelete}
              variant="outlined"
              color="error"
              size="small"
            >
              Delete
            </Button>
          )}
        </Box>
      </Box>

      <Divider sx=&#123;{ mb: 3 }&#125; />

      <Grid container spacing={3}>
        <Grid item xs={12} md={6}>
          <Typography variant="body2" color="text.secondary">
            ID
          </Typography>
          <Typography variant="body1" gutterBottom>
            { {{featureName}&#125;._id }
          </Typography>
        </Grid>

        <Grid item xs={12} md={6}>
          <Typography variant="body2" color="text.secondary">
            Created At
          </Typography>
          <Typography variant="body1" gutterBottom>
            { formatDate({{featureName}&#125;.createdAt) }
          </Typography>
        </Grid>

        { {{featureName}&#125;.description && (
          <Grid item xs={12}>
            <Typography variant="body2" color="text.secondary">
              Description
            </Typography>
            <Typography variant="body1" paragraph>
              { {{featureName}&#125;.description }
            </Typography>
          </Grid>
        )}

        {/* Add more fields based on your model */}
      </Grid>
    </Paper>
  );
}
{{{{/raw}&#125;}&#125;
